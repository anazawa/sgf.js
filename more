
> sgfgrove@1.0.2 test /Users/anazawa/work/sgfgrove
> node node_modules/argg test/test.*.js test/*/test.*.js && node node_modules/jshint/bin/jshint sgfgrove.js sgfgrove/*.js test/*.js test/*/*.js

TAP version 13
# basic
ok 1 SGF.parse
ok 2 SGF.stringify
ok 3 SGF.parse: reviver should be called
# SGFGrove.collection: default
ok 4 (unnamed assert)
ok 5 (unnamed assert)
ok 6 should be equal
# SGFGrove.collection: #create
ok 7 should be equal
ok 8 should be equal
ok 9 should not be equal
# SGFGrove.collection: #toString
ok 10 (unnamed assert)
ok 11 (unnamed assert)
# SGFGrove.collection: #slice
ok 12 should be equal
ok 13 should be equal
ok 14 should be equal
# SGFGrove.collection: #concat
ok 15 should be equal
ok 16 should be equal
ok 17 should be equal
ok 18 should be equal
ok 19 should be equal
# FF[4] Number
ok 20 should be equal
ok 21 should be equal
ok 22 should be equal
ok 23 should be equivalent
ok 24 should be equivalent
ok 25 should be equal
ok 26 should be equal
# FF[*] Unknown
ok 27 should be equivalent
ok 28 should be equivalent
# FF[4] None
ok 29 should be equal
ok 30 should be equivalent
ok 31 should be equal
ok 32 should be equal
# FF[4] Double
ok 33 should be equal
ok 34 should be equal
ok 35 should be equal
ok 36 should be equivalent
ok 37 should be equivalent
ok 38 should be equal
# FF[4] Real
ok 39 should be equal
ok 40 should be equal
ok 41 should be equal
ok 42 should be equivalent
ok 43 should be equivalent
ok 44 should be equal
ok 45 should be equal
# FF[4] Color
ok 46 should be equal
ok 47 should be equal
ok 48 should be equal
ok 49 should be equivalent
ok 50 should be equivalent
ok 51 should be equal
# FF[4] SimpleText
ok 52 should be equal
ok 53 should be equal
ok 54 should be equal
ok 55 should be equal
ok 56 should be equivalent
ok 57 should be equal
# FF[4] Text
ok 58 should be equal
ok 59 should be equal
ok 60 should be equal
ok 61 should be equal
ok 62 should be equivalent
ok 63 should be equal
# FF[4]GM[1] Point
ok 64 should be equal
ok 65 should be equal
ok 66 should be equal
ok 67 should be equivalent
ok 68 should be equivalent
ok 69 should be equal
# FF[4]GM[1] Move
ok 70 should be equal
ok 71 should be equal
ok 72 pass
ok 73 should be equivalent
ok 74 should be equivalent
ok 75 pass
# FF[4]GM[1] list of Point
ok 76 should be equivalent
ok 77 compressed point list
ok 78 compressed point list
ok 79 compressed point list
ok 80 can not be empty
ok 81 should be equivalent
ok 82 should be equivalent
ok 83 should be equivalent
ok 84 should be equivalent
ok 85 can not be empty
# SGFGrove.parse: reviver: overwrite property values
ok 86 C should be upper-case
# SGFGrove.parse: reviver: exclude properties
ok 87 C should be excluded
# SGF.parse: SyntaxError
ok 88 white spaces are ignored
not ok 89 duplicate property
  ---
    operator: throws
    expected: [Function: SyntaxError]
    actual:   undefined
    at: Test.<anonymous> (/Users/anazawa/work/sgfgrove/test/test.parse.js:52:11)
  ...
ok 90 extra characters
ok 91 semicolon is missing
ok 92 empty GameTree
ok 93 unclosed GameTree
ok 94 PropValue is missing
ok 95 unclosed PropValue
ok 96 unescaped closing bracket
# SGFGrove.parse: FF[3] PropIdent
ok 97 lower-case letters should be ignored
# SGFGrove.parse: redundant parentheses are ignored
ok 98 should be equivalent
# SGFGrove.stringify
ok 99 SGFGrove.stringify(undefined) should return undefined
ok 100 should be equal
ok 101 empty node
ok 102 (;a(;b(;c)(;d))) => (;a;b(;c)(;d))
ok 103 non-SGF property should be ignored
# SGFGrove.stringify: toSGF method
ok 104 should be called as the method on the object
ok 105 should be passed the key associated with the value
ok 106 the return value should be used as the property value
# SGFGrove.stringify: replacer
ok 107 function: property value should be replaced
ok 108 function: property value should be deleted
ok 109 array: selected properties should be stringified
ok 110 should throw
# SGFGrove.stringify: space
ok 111 number
ok 112 string
# SGFGrove.Util.isArray
ok 113 undefined vars are not arrays
ok 114 the arguments object is not an array
ok 115 but arrays are
# SGFGrove.Util.isNumber
ok 116 a string is not a number
ok 117 the arguments object is not a number
ok 118 undefined is not a number
ok 119 NaN is not a number
ok 120 Infinity is not a number
ok 121 numeric strings are not numbers
ok 122 but numbers are
# SGFGrove.Util.create
ok 123 object should inherit prototype
# SGFGrove.collection.gameTree: #next should behave like depth-first search
ok 124 initial state: #getNode
ok 125 initial state: #getParent
ok 126 initial state: #getChildCount
ok 127 initial state: #getDepth
ok 128 initial state: #getIndex
ok 129 initial state: #getHeight
ok 130 initial state: #getLeafCount
ok 131 initial state: #isLeaf
ok 132 initial state: #isRoot
ok 133 initial state: #getSiblings
ok 134 initial state: #getChildren
ok 135 initial state: #getAncestors
ok 136 next to '': #hasNext
ok 137 next to '': #peek
ok 138 next to '': #next
ok 139 next to '': #getNode
ok 140 next to '': #getParent
ok 141 next to '': #getChildCount
ok 142 next to '': #getDepth
ok 143 next to '': #getIndex
ok 144 next to '': #getHeight
ok 145 next to '': #getLeafCount
ok 146 next to '': #isLeaf
ok 147 next to '': #isRoot
ok 148 next to '': #getSiblings
ok 149 next to '': #getChildren
ok 150 next to '': #getAncestors
ok 151 next to 'root': #hasNext
ok 152 next to 'root': #peek
ok 153 next to 'root': #next
ok 154 next to 'root': #getNode
ok 155 next to 'root': #getParent
ok 156 next to 'root': #getChildCount
ok 157 next to 'root': #getDepth
ok 158 next to 'root': #getIndex
ok 159 next to 'root': #getHeight
ok 160 next to 'root': #getLeafCount
ok 161 next to 'root': #isLeaf
ok 162 next to 'root': #isRoot
ok 163 next to 'root': #getSiblings
ok 164 next to 'root': #getChildren
ok 165 next to 'root': #getAncestors
ok 166 next to 'a': #hasNext
ok 167 next to 'a': #peek
ok 168 next to 'a': #next
ok 169 next to 'a': #getNode
ok 170 next to 'a': #getParent
ok 171 next to 'a': #getChildCount
ok 172 next to 'a': #getDepth
ok 173 next to 'a': #getIndex
ok 174 next to 'a': #getHeight
ok 175 next to 'a': #getLeafCount
ok 176 next to 'a': #isLeaf
ok 177 next to 'a': #isRoot
ok 178 next to 'a': #getSiblings
ok 179 next to 'a': #getChildren
ok 180 next to 'a': #getAncestors
ok 181 next to 'b': #hasNext
ok 182 next to 'b': #peek
ok 183 next to 'b': #next
ok 184 next to 'b': #getNode
ok 185 next to 'b': #getParent
ok 186 next to 'b': #getChildCount
ok 187 next to 'b': #getDepth
ok 188 next to 'b': #getIndex
ok 189 next to 'b': #getHeight
ok 190 next to 'b': #getLeafCount
ok 191 next to 'b': #isLeaf
ok 192 next to 'b': #isRoot
ok 193 next to 'b': #getSiblings
ok 194 next to 'b': #getChildren
ok 195 next to 'b': #getAncestors
ok 196 next to 'c': #hasNext
ok 197 next to 'c': #peek
ok 198 next to 'c': #next
ok 199 next to 'c': #getNode
ok 200 next to 'c': #getParent
ok 201 next to 'c': #getChildCount
ok 202 next to 'c': #getDepth
ok 203 next to 'c': #getIndex
ok 204 next to 'c': #getHeight
ok 205 next to 'c': #getLeafCount
ok 206 next to 'c': #isLeaf
ok 207 next to 'c': #isRoot
ok 208 next to 'c': #getSiblings
ok 209 next to 'c': #getChildren
ok 210 next to 'c': #getAncestors
ok 211 next to 'd': #hasNext
ok 212 next to 'd': #peek
ok 213 next to 'd': #next
ok 214 next to 'd': #getNode
ok 215 next to 'd': #getParent
ok 216 next to 'd': #getChildCount
ok 217 next to 'd': #getDepth
ok 218 next to 'd': #getIndex
ok 219 next to 'd': #getHeight
ok 220 next to 'd': #getLeafCount
ok 221 next to 'd': #isLeaf
ok 222 next to 'd': #isRoot
ok 223 next to 'd': #getSiblings
ok 224 next to 'd': #getChildren
ok 225 next to 'd': #getAncestors
ok 226 next to 'e': #hasNext
ok 227 next to 'e': #peek
ok 228 next to 'e': #next
ok 229 next to 'e': #getNode
ok 230 next to 'e': #getParent
ok 231 next to 'e': #getChildCount
ok 232 next to 'e': #getDepth
ok 233 next to 'e': #getIndex
ok 234 next to 'e': #getHeight
ok 235 next to 'e': #getLeafCount
ok 236 next to 'e': #isLeaf
ok 237 next to 'e': #isRoot
ok 238 next to 'e': #getSiblings
ok 239 next to 'e': #getChildren
ok 240 next to 'e': #getAncestors
ok 241 next to 'f': #hasNext
ok 242 next to 'f': #peek
ok 243 next to 'f': #next
ok 244 next to 'f': #getNode
ok 245 next to 'f': #getParent
ok 246 next to 'f': #getChildCount
ok 247 next to 'f': #getDepth
ok 248 next to 'f': #getIndex
ok 249 next to 'f': #getHeight
ok 250 next to 'f': #getLeafCount
ok 251 next to 'f': #isLeaf
ok 252 next to 'f': #isRoot
ok 253 next to 'f': #getSiblings
ok 254 next to 'f': #getChildren
ok 255 next to 'f': #getAncestors
ok 256 next to 'g': #hasNext
ok 257 next to 'g': #peek
ok 258 next to 'g': #next
ok 259 next to 'g': #getNode
ok 260 next to 'g': #getParent
ok 261 next to 'g': #getChildCount
ok 262 next to 'g': #getDepth
ok 263 next to 'g': #getIndex
ok 264 next to 'g': #getHeight
ok 265 next to 'g': #getLeafCount
ok 266 next to 'g': #isLeaf
ok 267 next to 'g': #isRoot
ok 268 next to 'g': #getSiblings
ok 269 next to 'g': #getChildren
ok 270 next to 'g': #getAncestors
ok 271 next to 'h': #hasNext
ok 272 next to 'h': #peek
ok 273 next to 'h': #next
ok 274 next to 'h': #getNode
ok 275 next to 'h': #getParent
ok 276 next to 'h': #getChildCount
ok 277 next to 'h': #getDepth
ok 278 next to 'h': #getIndex
ok 279 next to 'h': #getHeight
ok 280 next to 'h': #getLeafCount
ok 281 next to 'h': #isLeaf
ok 282 next to 'h': #isRoot
ok 283 next to 'h': #getSiblings
ok 284 next to 'h': #getChildren
ok 285 next to 'h': #getAncestors
ok 286 next to 'i': #hasNext
ok 287 next to 'i': #peek
ok 288 next to 'i': #next
ok 289 next to 'i': #getNode
ok 290 next to 'i': #getParent
ok 291 next to 'i': #getChildCount
ok 292 next to 'i': #getDepth
ok 293 next to 'i': #getIndex
ok 294 next to 'i': #getHeight
ok 295 next to 'i': #getLeafCount
ok 296 next to 'i': #isLeaf
ok 297 next to 'i': #isRoot
ok 298 next to 'i': #getSiblings
ok 299 next to 'i': #getChildren
ok 300 next to 'i': #getAncestors
ok 301 next to 'j': #hasNext
ok 302 next to 'j': #peek
ok 303 next to 'j': #next
ok 304 next to 'j': #getNode
ok 305 next to 'j': #getParent
ok 306 next to 'j': #getChildCount
ok 307 next to 'j': #getDepth
ok 308 next to 'j': #getIndex
ok 309 next to 'j': #getHeight
ok 310 next to 'j': #getLeafCount
ok 311 next to 'j': #isLeaf
ok 312 next to 'j': #isRoot
ok 313 next to 'j': #getSiblings
ok 314 next to 'j': #getChildren
ok 315 next to 'j': #getAncestors
ok 316 previous to 'j': #hasPrevious
ok 317 previous to 'j': #lookBack
ok 318 previous to 'j': #previous
ok 319 previous to 'j': #getNode
ok 320 previous to 'j': #getParent
ok 321 previous to 'j': #getChildCount
ok 322 previous to 'j': #getDepth
ok 323 previous to 'j': #getIndex
ok 324 previous to 'j': #getHeight
ok 325 previous to 'j': #getLeafCount
ok 326 previous to 'j': #isLeaf
ok 327 previous to 'j': #isRoot
ok 328 previous to 'j': #getSiblings
ok 329 previous to 'j': #getChildren
ok 330 previous to 'j': #getAncestors
ok 331 previous to 'i': #hasPrevious
ok 332 previous to 'i': #lookBack
ok 333 previous to 'i': #previous
ok 334 previous to 'i': #getNode
ok 335 previous to 'i': #getParent
ok 336 previous to 'i': #getChildCount
ok 337 previous to 'i': #getDepth
ok 338 previous to 'i': #getIndex
ok 339 previous to 'i': #getHeight
ok 340 previous to 'i': #getLeafCount
ok 341 previous to 'i': #isLeaf
ok 342 previous to 'i': #isRoot
ok 343 previous to 'i': #getSiblings
ok 344 previous to 'i': #getChildren
ok 345 previous to 'i': #getAncestors
ok 346 previous to 'h': #hasPrevious
ok 347 previous to 'h': #lookBack
ok 348 previous to 'h': #previous
ok 349 previous to 'h': #getNode
ok 350 previous to 'h': #getParent
ok 351 previous to 'h': #getChildCount
ok 352 previous to 'h': #getDepth
ok 353 previous to 'h': #getIndex
ok 354 previous to 'h': #getHeight
ok 355 previous to 'h': #getLeafCount
ok 356 previous to 'h': #isLeaf
ok 357 previous to 'h': #isRoot
ok 358 previous to 'h': #getSiblings
ok 359 previous to 'h': #getChildren
ok 360 previous to 'h': #getAncestors
ok 361 previous to 'g': #hasPrevious
ok 362 previous to 'g': #lookBack
ok 363 previous to 'g': #previous
ok 364 previous to 'g': #getNode
ok 365 previous to 'g': #getParent
ok 366 previous to 'g': #getChildCount
ok 367 previous to 'g': #getDepth
ok 368 previous to 'g': #getIndex
ok 369 previous to 'g': #getHeight
ok 370 previous to 'g': #getLeafCount
ok 371 previous to 'g': #isLeaf
ok 372 previous to 'g': #isRoot
ok 373 previous to 'g': #getSiblings
ok 374 previous to 'g': #getChildren
ok 375 previous to 'g': #getAncestors
ok 376 previous to 'f': #hasPrevious
ok 377 previous to 'f': #lookBack
ok 378 previous to 'f': #previous
ok 379 previous to 'f': #getNode
ok 380 previous to 'f': #getParent
ok 381 previous to 'f': #getChildCount
ok 382 previous to 'f': #getDepth
ok 383 previous to 'f': #getIndex
ok 384 previous to 'f': #getHeight
ok 385 previous to 'f': #getLeafCount
ok 386 previous to 'f': #isLeaf
ok 387 previous to 'f': #isRoot
ok 388 previous to 'f': #getSiblings
ok 389 previous to 'f': #getChildren
ok 390 previous to 'f': #getAncestors
ok 391 previous to 'e': #hasPrevious
ok 392 previous to 'e': #lookBack
ok 393 previous to 'e': #previous
ok 394 previous to 'e': #getNode
ok 395 previous to 'e': #getParent
ok 396 previous to 'e': #getChildCount
ok 397 previous to 'e': #getDepth
ok 398 previous to 'e': #getIndex
ok 399 previous to 'e': #getHeight
ok 400 previous to 'e': #getLeafCount
ok 401 previous to 'e': #isLeaf
ok 402 previous to 'e': #isRoot
ok 403 previous to 'e': #getSiblings
ok 404 previous to 'e': #getChildren
ok 405 previous to 'e': #getAncestors
ok 406 previous to 'd': #hasPrevious
ok 407 previous to 'd': #lookBack
ok 408 previous to 'd': #previous
ok 409 previous to 'd': #getNode
ok 410 previous to 'd': #getParent
ok 411 previous to 'd': #getChildCount
ok 412 previous to 'd': #getDepth
ok 413 previous to 'd': #getIndex
ok 414 previous to 'd': #getHeight
ok 415 previous to 'd': #getLeafCount
ok 416 previous to 'd': #isLeaf
ok 417 previous to 'd': #isRoot
ok 418 previous to 'd': #getSiblings
ok 419 previous to 'd': #getChildren
ok 420 previous to 'd': #getAncestors
ok 421 previous to 'c': #hasPrevious
ok 422 previous to 'c': #lookBack
ok 423 previous to 'c': #previous
ok 424 previous to 'c': #getNode
ok 425 previous to 'c': #getParent
ok 426 previous to 'c': #getChildCount
ok 427 previous to 'c': #getDepth
ok 428 previous to 'c': #getIndex
ok 429 previous to 'c': #getHeight
ok 430 previous to 'c': #getLeafCount
ok 431 previous to 'c': #isLeaf
ok 432 previous to 'c': #isRoot
ok 433 previous to 'c': #getSiblings
ok 434 previous to 'c': #getChildren
ok 435 previous to 'c': #getAncestors
ok 436 previous to 'b': #hasPrevious
ok 437 previous to 'b': #lookBack
ok 438 previous to 'b': #previous
ok 439 previous to 'b': #getNode
ok 440 previous to 'b': #getParent
ok 441 previous to 'b': #getChildCount
ok 442 previous to 'b': #getDepth
ok 443 previous to 'b': #getIndex
ok 444 previous to 'b': #getHeight
ok 445 previous to 'b': #getLeafCount
ok 446 previous to 'b': #isLeaf
ok 447 previous to 'b': #isRoot
ok 448 previous to 'b': #getSiblings
ok 449 previous to 'b': #getChildren
ok 450 previous to 'b': #getAncestors
ok 451 previous to 'a': #hasPrevious
ok 452 previous to 'a': #lookBack
ok 453 previous to 'a': #previous
ok 454 previous to 'a': #getNode
ok 455 previous to 'a': #getParent
ok 456 previous to 'a': #getChildCount
ok 457 previous to 'a': #getDepth
ok 458 previous to 'a': #getIndex
ok 459 previous to 'a': #getHeight
ok 460 previous to 'a': #getLeafCount
ok 461 previous to 'a': #isLeaf
ok 462 previous to 'a': #isRoot
ok 463 previous to 'a': #getSiblings
ok 464 previous to 'a': #getChildren
ok 465 previous to 'a': #getAncestors
ok 466 previous to 'root': #hasPrevious
ok 467 previous to 'root': #lookBack
ok 468 previous to 'root': #previous
ok 469 previous to 'root': #getNode
ok 470 previous to 'root': #getParent
ok 471 previous to 'root': #getChildCount
ok 472 previous to 'root': #getDepth
ok 473 previous to 'root': #getIndex
ok 474 previous to 'root': #getHeight
ok 475 previous to 'root': #getLeafCount
ok 476 previous to 'root': #isLeaf
ok 477 previous to 'root': #isRoot
ok 478 previous to 'root': #getSiblings
ok 479 previous to 'root': #getChildren
ok 480 previous to 'root': #getAncestors
ok 481 #rewind should return the invocant
ok 482 after #rewind: #getNode
ok 483 after #rewind: #getParent
ok 484 after #rewind: #getChildCount
ok 485 after #rewind: #getDepth
ok 486 after #rewind: #getIndex
ok 487 after #rewind: #getHeight
ok 488 after #rewind: #getLeafCount
ok 489 after #rewind: #isLeaf
ok 490 after #rewind: #isRoot
ok 491 after #rewind: #getSiblings
ok 492 after #rewind: #getChildren
ok 493 after #rewind: #getAncestors
# SGFGrove.collection.gameTree: #insertChildAt
ok 494 #insertChildAt can insert a node object
ok 495 #insertChildAt can insert a game tree array
ok 496 #insertChildAt can insert a gameTree object
ok 497 #insertChildAt should throw an exception if the given index is out of bounds
ok 498 should be equal
ok 499 should be equal
ok 500 should be equal
ok 501 should be equal
ok 502 should be equal
ok 503 should throw
ok 504 should be equal
ok 505 should be equal
# SGFGrove.collection.gameTree: #removeChildAt
ok 506 should be equal
ok 507 should be equivalent
ok 508 should be equal
ok 509 should be equivalent
ok 510 should be equal
ok 511 should be equivalent
ok 512 should be equal
ok 513 should be equivalent
ok 514 should throw
ok 515 should be equal
ok 516 should be equivalent
# SGFGrove.collection.gameTree: #appendChild
ok 517 should be equal
ok 518 should be equal
ok 519 should be equal
# SGFGrove.collection.gameTree: #replaceChildAt
ok 520 should be equal
ok 521 should be equivalent
# SGFGrove.collection.gameTree: default
ok 522 (unnamed assert)
ok 523 (unnamed assert)
ok 524 (unnamed assert)
ok 525 (unnamed assert)
ok 526 (unnamed assert)
ok 527 (unnamed assert)
ok 528 (unnamed assert)
ok 529 (unnamed assert)
ok 530 (unnamed assert)
ok 531 (unnamed assert)
ok 532 (unnamed assert)
ok 533 (unnamed assert)
ok 534 (unnamed assert)
ok 535 (unnamed assert)
ok 536 (unnamed assert)
ok 537 (unnamed assert)
ok 538 (unnamed assert)
ok 539 (unnamed assert)
ok 540 (unnamed assert)
ok 541 (unnamed assert)
ok 542 (unnamed assert)
ok 543 (unnamed assert)
ok 544 (unnamed assert)
ok 545 (unnamed assert)
ok 546 (unnamed assert)
ok 547 (unnamed assert)
ok 548 should be equivalent
ok 549 should be equal
ok 550 should be equal
ok 551 should be equal
ok 552 should be equal
# SGFGrove.collection.gameTree: #clone
ok 553 (unnamed assert)
ok 554 (unnamed assert)
ok 555 should be equivalent
# SGFGrove.collection.gameTree: #clone should invoke the #clone method of the given data
ok 556 should be equivalent
# SGFGrove.collection.gameTree: #clone does not copy the iterator state
ok 557 should be equivalent
ok 558 should be equivalent

1..558
# tests 558
# pass  557
# fail  1

